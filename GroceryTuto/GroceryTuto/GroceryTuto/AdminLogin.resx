<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WCwWgxkY+A9r4sbgnlTx5QAAAABJRU5ErkJggg==
</value>
  </data>
</root>